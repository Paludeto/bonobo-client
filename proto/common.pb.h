// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_common_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_common_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_common_2eproto;
namespace fira_message {
class Ball;
struct BallDefaultTypeInternal;
extern BallDefaultTypeInternal _Ball_default_instance_;
class Field;
struct FieldDefaultTypeInternal;
extern FieldDefaultTypeInternal _Field_default_instance_;
class Frame;
struct FrameDefaultTypeInternal;
extern FrameDefaultTypeInternal _Frame_default_instance_;
class Robot;
struct RobotDefaultTypeInternal;
extern RobotDefaultTypeInternal _Robot_default_instance_;
}  // namespace fira_message
PROTOBUF_NAMESPACE_OPEN
template<> ::fira_message::Ball* Arena::CreateMaybeMessage<::fira_message::Ball>(Arena*);
template<> ::fira_message::Field* Arena::CreateMaybeMessage<::fira_message::Field>(Arena*);
template<> ::fira_message::Frame* Arena::CreateMaybeMessage<::fira_message::Frame>(Arena*);
template<> ::fira_message::Robot* Arena::CreateMaybeMessage<::fira_message::Robot>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace fira_message {

// ===================================================================

class Ball final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fira_message.Ball) */ {
 public:
  inline Ball() : Ball(nullptr) {}
  ~Ball() override;
  explicit constexpr Ball(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Ball(const Ball& from);
  Ball(Ball&& from) noexcept
    : Ball() {
    *this = ::std::move(from);
  }

  inline Ball& operator=(const Ball& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ball& operator=(Ball&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ball& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ball* internal_default_instance() {
    return reinterpret_cast<const Ball*>(
               &_Ball_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Ball& a, Ball& b) {
    a.Swap(&b);
  }
  inline void Swap(Ball* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ball* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ball* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Ball>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Ball& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Ball& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ball* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fira_message.Ball";
  }
  protected:
  explicit Ball(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kVxFieldNumber = 4,
    kVyFieldNumber = 5,
    kVzFieldNumber = 6,
  };
  // double x = 1;
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // double y = 2;
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // double z = 3;
  void clear_z();
  double z() const;
  void set_z(double value);
  private:
  double _internal_z() const;
  void _internal_set_z(double value);
  public:

  // double vx = 4;
  void clear_vx();
  double vx() const;
  void set_vx(double value);
  private:
  double _internal_vx() const;
  void _internal_set_vx(double value);
  public:

  // double vy = 5;
  void clear_vy();
  double vy() const;
  void set_vy(double value);
  private:
  double _internal_vy() const;
  void _internal_set_vy(double value);
  public:

  // double vz = 6;
  void clear_vz();
  double vz() const;
  void set_vz(double value);
  private:
  double _internal_vz() const;
  void _internal_set_vz(double value);
  public:

  // @@protoc_insertion_point(class_scope:fira_message.Ball)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double x_;
  double y_;
  double z_;
  double vx_;
  double vy_;
  double vz_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class Robot final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fira_message.Robot) */ {
 public:
  inline Robot() : Robot(nullptr) {}
  ~Robot() override;
  explicit constexpr Robot(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Robot(const Robot& from);
  Robot(Robot&& from) noexcept
    : Robot() {
    *this = ::std::move(from);
  }

  inline Robot& operator=(const Robot& from) {
    CopyFrom(from);
    return *this;
  }
  inline Robot& operator=(Robot&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Robot& default_instance() {
    return *internal_default_instance();
  }
  static inline const Robot* internal_default_instance() {
    return reinterpret_cast<const Robot*>(
               &_Robot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Robot& a, Robot& b) {
    a.Swap(&b);
  }
  inline void Swap(Robot* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Robot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Robot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Robot>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Robot& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Robot& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Robot* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fira_message.Robot";
  }
  protected:
  explicit Robot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kOrientationFieldNumber = 4,
    kVxFieldNumber = 5,
    kVyFieldNumber = 6,
    kVorientationFieldNumber = 7,
    kRobotIdFieldNumber = 1,
  };
  // double x = 2;
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // double y = 3;
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // double orientation = 4;
  void clear_orientation();
  double orientation() const;
  void set_orientation(double value);
  private:
  double _internal_orientation() const;
  void _internal_set_orientation(double value);
  public:

  // double vx = 5;
  void clear_vx();
  double vx() const;
  void set_vx(double value);
  private:
  double _internal_vx() const;
  void _internal_set_vx(double value);
  public:

  // double vy = 6;
  void clear_vy();
  double vy() const;
  void set_vy(double value);
  private:
  double _internal_vy() const;
  void _internal_set_vy(double value);
  public:

  // double vorientation = 7;
  void clear_vorientation();
  double vorientation() const;
  void set_vorientation(double value);
  private:
  double _internal_vorientation() const;
  void _internal_set_vorientation(double value);
  public:

  // uint32 robot_id = 1;
  void clear_robot_id();
  uint32_t robot_id() const;
  void set_robot_id(uint32_t value);
  private:
  uint32_t _internal_robot_id() const;
  void _internal_set_robot_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:fira_message.Robot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double x_;
  double y_;
  double orientation_;
  double vx_;
  double vy_;
  double vorientation_;
  uint32_t robot_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class Field final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fira_message.Field) */ {
 public:
  inline Field() : Field(nullptr) {}
  ~Field() override;
  explicit constexpr Field(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Field(const Field& from);
  Field(Field&& from) noexcept
    : Field() {
    *this = ::std::move(from);
  }

  inline Field& operator=(const Field& from) {
    CopyFrom(from);
    return *this;
  }
  inline Field& operator=(Field&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Field& default_instance() {
    return *internal_default_instance();
  }
  static inline const Field* internal_default_instance() {
    return reinterpret_cast<const Field*>(
               &_Field_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Field& a, Field& b) {
    a.Swap(&b);
  }
  inline void Swap(Field* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Field* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Field* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Field>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Field& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Field& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Field* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fira_message.Field";
  }
  protected:
  explicit Field(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWidthFieldNumber = 1,
    kLengthFieldNumber = 2,
    kGoalWidthFieldNumber = 3,
    kGoalDepthFieldNumber = 4,
    kCenterRadiusFieldNumber = 5,
    kPenaltyWidthFieldNumber = 6,
    kPenaltyDepthFieldNumber = 7,
    kPenaltyPointFieldNumber = 8,
  };
  // double width = 1;
  void clear_width();
  double width() const;
  void set_width(double value);
  private:
  double _internal_width() const;
  void _internal_set_width(double value);
  public:

  // double length = 2;
  void clear_length();
  double length() const;
  void set_length(double value);
  private:
  double _internal_length() const;
  void _internal_set_length(double value);
  public:

  // double goal_width = 3;
  void clear_goal_width();
  double goal_width() const;
  void set_goal_width(double value);
  private:
  double _internal_goal_width() const;
  void _internal_set_goal_width(double value);
  public:

  // double goal_depth = 4;
  void clear_goal_depth();
  double goal_depth() const;
  void set_goal_depth(double value);
  private:
  double _internal_goal_depth() const;
  void _internal_set_goal_depth(double value);
  public:

  // double center_radius = 5;
  void clear_center_radius();
  double center_radius() const;
  void set_center_radius(double value);
  private:
  double _internal_center_radius() const;
  void _internal_set_center_radius(double value);
  public:

  // double penalty_width = 6;
  void clear_penalty_width();
  double penalty_width() const;
  void set_penalty_width(double value);
  private:
  double _internal_penalty_width() const;
  void _internal_set_penalty_width(double value);
  public:

  // double penalty_depth = 7;
  void clear_penalty_depth();
  double penalty_depth() const;
  void set_penalty_depth(double value);
  private:
  double _internal_penalty_depth() const;
  void _internal_set_penalty_depth(double value);
  public:

  // double penalty_point = 8;
  void clear_penalty_point();
  double penalty_point() const;
  void set_penalty_point(double value);
  private:
  double _internal_penalty_point() const;
  void _internal_set_penalty_point(double value);
  public:

  // @@protoc_insertion_point(class_scope:fira_message.Field)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double width_;
  double length_;
  double goal_width_;
  double goal_depth_;
  double center_radius_;
  double penalty_width_;
  double penalty_depth_;
  double penalty_point_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class Frame final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fira_message.Frame) */ {
 public:
  inline Frame() : Frame(nullptr) {}
  ~Frame() override;
  explicit constexpr Frame(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Frame(const Frame& from);
  Frame(Frame&& from) noexcept
    : Frame() {
    *this = ::std::move(from);
  }

  inline Frame& operator=(const Frame& from) {
    CopyFrom(from);
    return *this;
  }
  inline Frame& operator=(Frame&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Frame& default_instance() {
    return *internal_default_instance();
  }
  static inline const Frame* internal_default_instance() {
    return reinterpret_cast<const Frame*>(
               &_Frame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Frame& a, Frame& b) {
    a.Swap(&b);
  }
  inline void Swap(Frame* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Frame* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Frame* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Frame>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Frame& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Frame& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Frame* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fira_message.Frame";
  }
  protected:
  explicit Frame(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRobotsYellowFieldNumber = 2,
    kRobotsBlueFieldNumber = 3,
    kBallFieldNumber = 1,
  };
  // repeated .fira_message.Robot robots_yellow = 2;
  int robots_yellow_size() const;
  private:
  int _internal_robots_yellow_size() const;
  public:
  void clear_robots_yellow();
  ::fira_message::Robot* mutable_robots_yellow(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot >*
      mutable_robots_yellow();
  private:
  const ::fira_message::Robot& _internal_robots_yellow(int index) const;
  ::fira_message::Robot* _internal_add_robots_yellow();
  public:
  const ::fira_message::Robot& robots_yellow(int index) const;
  ::fira_message::Robot* add_robots_yellow();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot >&
      robots_yellow() const;

  // repeated .fira_message.Robot robots_blue = 3;
  int robots_blue_size() const;
  private:
  int _internal_robots_blue_size() const;
  public:
  void clear_robots_blue();
  ::fira_message::Robot* mutable_robots_blue(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot >*
      mutable_robots_blue();
  private:
  const ::fira_message::Robot& _internal_robots_blue(int index) const;
  ::fira_message::Robot* _internal_add_robots_blue();
  public:
  const ::fira_message::Robot& robots_blue(int index) const;
  ::fira_message::Robot* add_robots_blue();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot >&
      robots_blue() const;

  // .fira_message.Ball ball = 1;
  bool has_ball() const;
  private:
  bool _internal_has_ball() const;
  public:
  void clear_ball();
  const ::fira_message::Ball& ball() const;
  PROTOBUF_NODISCARD ::fira_message::Ball* release_ball();
  ::fira_message::Ball* mutable_ball();
  void set_allocated_ball(::fira_message::Ball* ball);
  private:
  const ::fira_message::Ball& _internal_ball() const;
  ::fira_message::Ball* _internal_mutable_ball();
  public:
  void unsafe_arena_set_allocated_ball(
      ::fira_message::Ball* ball);
  ::fira_message::Ball* unsafe_arena_release_ball();

  // @@protoc_insertion_point(class_scope:fira_message.Frame)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot > robots_yellow_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot > robots_blue_;
  ::fira_message::Ball* ball_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_common_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Ball

// double x = 1;
inline void Ball::clear_x() {
  x_ = 0;
}
inline double Ball::_internal_x() const {
  return x_;
}
inline double Ball::x() const {
  // @@protoc_insertion_point(field_get:fira_message.Ball.x)
  return _internal_x();
}
inline void Ball::_internal_set_x(double value) {
  
  x_ = value;
}
inline void Ball::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:fira_message.Ball.x)
}

// double y = 2;
inline void Ball::clear_y() {
  y_ = 0;
}
inline double Ball::_internal_y() const {
  return y_;
}
inline double Ball::y() const {
  // @@protoc_insertion_point(field_get:fira_message.Ball.y)
  return _internal_y();
}
inline void Ball::_internal_set_y(double value) {
  
  y_ = value;
}
inline void Ball::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:fira_message.Ball.y)
}

// double z = 3;
inline void Ball::clear_z() {
  z_ = 0;
}
inline double Ball::_internal_z() const {
  return z_;
}
inline double Ball::z() const {
  // @@protoc_insertion_point(field_get:fira_message.Ball.z)
  return _internal_z();
}
inline void Ball::_internal_set_z(double value) {
  
  z_ = value;
}
inline void Ball::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:fira_message.Ball.z)
}

// double vx = 4;
inline void Ball::clear_vx() {
  vx_ = 0;
}
inline double Ball::_internal_vx() const {
  return vx_;
}
inline double Ball::vx() const {
  // @@protoc_insertion_point(field_get:fira_message.Ball.vx)
  return _internal_vx();
}
inline void Ball::_internal_set_vx(double value) {
  
  vx_ = value;
}
inline void Ball::set_vx(double value) {
  _internal_set_vx(value);
  // @@protoc_insertion_point(field_set:fira_message.Ball.vx)
}

// double vy = 5;
inline void Ball::clear_vy() {
  vy_ = 0;
}
inline double Ball::_internal_vy() const {
  return vy_;
}
inline double Ball::vy() const {
  // @@protoc_insertion_point(field_get:fira_message.Ball.vy)
  return _internal_vy();
}
inline void Ball::_internal_set_vy(double value) {
  
  vy_ = value;
}
inline void Ball::set_vy(double value) {
  _internal_set_vy(value);
  // @@protoc_insertion_point(field_set:fira_message.Ball.vy)
}

// double vz = 6;
inline void Ball::clear_vz() {
  vz_ = 0;
}
inline double Ball::_internal_vz() const {
  return vz_;
}
inline double Ball::vz() const {
  // @@protoc_insertion_point(field_get:fira_message.Ball.vz)
  return _internal_vz();
}
inline void Ball::_internal_set_vz(double value) {
  
  vz_ = value;
}
inline void Ball::set_vz(double value) {
  _internal_set_vz(value);
  // @@protoc_insertion_point(field_set:fira_message.Ball.vz)
}

// -------------------------------------------------------------------

// Robot

// uint32 robot_id = 1;
inline void Robot::clear_robot_id() {
  robot_id_ = 0u;
}
inline uint32_t Robot::_internal_robot_id() const {
  return robot_id_;
}
inline uint32_t Robot::robot_id() const {
  // @@protoc_insertion_point(field_get:fira_message.Robot.robot_id)
  return _internal_robot_id();
}
inline void Robot::_internal_set_robot_id(uint32_t value) {
  
  robot_id_ = value;
}
inline void Robot::set_robot_id(uint32_t value) {
  _internal_set_robot_id(value);
  // @@protoc_insertion_point(field_set:fira_message.Robot.robot_id)
}

// double x = 2;
inline void Robot::clear_x() {
  x_ = 0;
}
inline double Robot::_internal_x() const {
  return x_;
}
inline double Robot::x() const {
  // @@protoc_insertion_point(field_get:fira_message.Robot.x)
  return _internal_x();
}
inline void Robot::_internal_set_x(double value) {
  
  x_ = value;
}
inline void Robot::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:fira_message.Robot.x)
}

// double y = 3;
inline void Robot::clear_y() {
  y_ = 0;
}
inline double Robot::_internal_y() const {
  return y_;
}
inline double Robot::y() const {
  // @@protoc_insertion_point(field_get:fira_message.Robot.y)
  return _internal_y();
}
inline void Robot::_internal_set_y(double value) {
  
  y_ = value;
}
inline void Robot::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:fira_message.Robot.y)
}

// double orientation = 4;
inline void Robot::clear_orientation() {
  orientation_ = 0;
}
inline double Robot::_internal_orientation() const {
  return orientation_;
}
inline double Robot::orientation() const {
  // @@protoc_insertion_point(field_get:fira_message.Robot.orientation)
  return _internal_orientation();
}
inline void Robot::_internal_set_orientation(double value) {
  
  orientation_ = value;
}
inline void Robot::set_orientation(double value) {
  _internal_set_orientation(value);
  // @@protoc_insertion_point(field_set:fira_message.Robot.orientation)
}

// double vx = 5;
inline void Robot::clear_vx() {
  vx_ = 0;
}
inline double Robot::_internal_vx() const {
  return vx_;
}
inline double Robot::vx() const {
  // @@protoc_insertion_point(field_get:fira_message.Robot.vx)
  return _internal_vx();
}
inline void Robot::_internal_set_vx(double value) {
  
  vx_ = value;
}
inline void Robot::set_vx(double value) {
  _internal_set_vx(value);
  // @@protoc_insertion_point(field_set:fira_message.Robot.vx)
}

// double vy = 6;
inline void Robot::clear_vy() {
  vy_ = 0;
}
inline double Robot::_internal_vy() const {
  return vy_;
}
inline double Robot::vy() const {
  // @@protoc_insertion_point(field_get:fira_message.Robot.vy)
  return _internal_vy();
}
inline void Robot::_internal_set_vy(double value) {
  
  vy_ = value;
}
inline void Robot::set_vy(double value) {
  _internal_set_vy(value);
  // @@protoc_insertion_point(field_set:fira_message.Robot.vy)
}

// double vorientation = 7;
inline void Robot::clear_vorientation() {
  vorientation_ = 0;
}
inline double Robot::_internal_vorientation() const {
  return vorientation_;
}
inline double Robot::vorientation() const {
  // @@protoc_insertion_point(field_get:fira_message.Robot.vorientation)
  return _internal_vorientation();
}
inline void Robot::_internal_set_vorientation(double value) {
  
  vorientation_ = value;
}
inline void Robot::set_vorientation(double value) {
  _internal_set_vorientation(value);
  // @@protoc_insertion_point(field_set:fira_message.Robot.vorientation)
}

// -------------------------------------------------------------------

// Field

// double width = 1;
inline void Field::clear_width() {
  width_ = 0;
}
inline double Field::_internal_width() const {
  return width_;
}
inline double Field::width() const {
  // @@protoc_insertion_point(field_get:fira_message.Field.width)
  return _internal_width();
}
inline void Field::_internal_set_width(double value) {
  
  width_ = value;
}
inline void Field::set_width(double value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:fira_message.Field.width)
}

// double length = 2;
inline void Field::clear_length() {
  length_ = 0;
}
inline double Field::_internal_length() const {
  return length_;
}
inline double Field::length() const {
  // @@protoc_insertion_point(field_get:fira_message.Field.length)
  return _internal_length();
}
inline void Field::_internal_set_length(double value) {
  
  length_ = value;
}
inline void Field::set_length(double value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:fira_message.Field.length)
}

// double goal_width = 3;
inline void Field::clear_goal_width() {
  goal_width_ = 0;
}
inline double Field::_internal_goal_width() const {
  return goal_width_;
}
inline double Field::goal_width() const {
  // @@protoc_insertion_point(field_get:fira_message.Field.goal_width)
  return _internal_goal_width();
}
inline void Field::_internal_set_goal_width(double value) {
  
  goal_width_ = value;
}
inline void Field::set_goal_width(double value) {
  _internal_set_goal_width(value);
  // @@protoc_insertion_point(field_set:fira_message.Field.goal_width)
}

// double goal_depth = 4;
inline void Field::clear_goal_depth() {
  goal_depth_ = 0;
}
inline double Field::_internal_goal_depth() const {
  return goal_depth_;
}
inline double Field::goal_depth() const {
  // @@protoc_insertion_point(field_get:fira_message.Field.goal_depth)
  return _internal_goal_depth();
}
inline void Field::_internal_set_goal_depth(double value) {
  
  goal_depth_ = value;
}
inline void Field::set_goal_depth(double value) {
  _internal_set_goal_depth(value);
  // @@protoc_insertion_point(field_set:fira_message.Field.goal_depth)
}

// double center_radius = 5;
inline void Field::clear_center_radius() {
  center_radius_ = 0;
}
inline double Field::_internal_center_radius() const {
  return center_radius_;
}
inline double Field::center_radius() const {
  // @@protoc_insertion_point(field_get:fira_message.Field.center_radius)
  return _internal_center_radius();
}
inline void Field::_internal_set_center_radius(double value) {
  
  center_radius_ = value;
}
inline void Field::set_center_radius(double value) {
  _internal_set_center_radius(value);
  // @@protoc_insertion_point(field_set:fira_message.Field.center_radius)
}

// double penalty_width = 6;
inline void Field::clear_penalty_width() {
  penalty_width_ = 0;
}
inline double Field::_internal_penalty_width() const {
  return penalty_width_;
}
inline double Field::penalty_width() const {
  // @@protoc_insertion_point(field_get:fira_message.Field.penalty_width)
  return _internal_penalty_width();
}
inline void Field::_internal_set_penalty_width(double value) {
  
  penalty_width_ = value;
}
inline void Field::set_penalty_width(double value) {
  _internal_set_penalty_width(value);
  // @@protoc_insertion_point(field_set:fira_message.Field.penalty_width)
}

// double penalty_depth = 7;
inline void Field::clear_penalty_depth() {
  penalty_depth_ = 0;
}
inline double Field::_internal_penalty_depth() const {
  return penalty_depth_;
}
inline double Field::penalty_depth() const {
  // @@protoc_insertion_point(field_get:fira_message.Field.penalty_depth)
  return _internal_penalty_depth();
}
inline void Field::_internal_set_penalty_depth(double value) {
  
  penalty_depth_ = value;
}
inline void Field::set_penalty_depth(double value) {
  _internal_set_penalty_depth(value);
  // @@protoc_insertion_point(field_set:fira_message.Field.penalty_depth)
}

// double penalty_point = 8;
inline void Field::clear_penalty_point() {
  penalty_point_ = 0;
}
inline double Field::_internal_penalty_point() const {
  return penalty_point_;
}
inline double Field::penalty_point() const {
  // @@protoc_insertion_point(field_get:fira_message.Field.penalty_point)
  return _internal_penalty_point();
}
inline void Field::_internal_set_penalty_point(double value) {
  
  penalty_point_ = value;
}
inline void Field::set_penalty_point(double value) {
  _internal_set_penalty_point(value);
  // @@protoc_insertion_point(field_set:fira_message.Field.penalty_point)
}

// -------------------------------------------------------------------

// Frame

// .fira_message.Ball ball = 1;
inline bool Frame::_internal_has_ball() const {
  return this != internal_default_instance() && ball_ != nullptr;
}
inline bool Frame::has_ball() const {
  return _internal_has_ball();
}
inline void Frame::clear_ball() {
  if (GetArenaForAllocation() == nullptr && ball_ != nullptr) {
    delete ball_;
  }
  ball_ = nullptr;
}
inline const ::fira_message::Ball& Frame::_internal_ball() const {
  const ::fira_message::Ball* p = ball_;
  return p != nullptr ? *p : reinterpret_cast<const ::fira_message::Ball&>(
      ::fira_message::_Ball_default_instance_);
}
inline const ::fira_message::Ball& Frame::ball() const {
  // @@protoc_insertion_point(field_get:fira_message.Frame.ball)
  return _internal_ball();
}
inline void Frame::unsafe_arena_set_allocated_ball(
    ::fira_message::Ball* ball) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ball_);
  }
  ball_ = ball;
  if (ball) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fira_message.Frame.ball)
}
inline ::fira_message::Ball* Frame::release_ball() {
  
  ::fira_message::Ball* temp = ball_;
  ball_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::fira_message::Ball* Frame::unsafe_arena_release_ball() {
  // @@protoc_insertion_point(field_release:fira_message.Frame.ball)
  
  ::fira_message::Ball* temp = ball_;
  ball_ = nullptr;
  return temp;
}
inline ::fira_message::Ball* Frame::_internal_mutable_ball() {
  
  if (ball_ == nullptr) {
    auto* p = CreateMaybeMessage<::fira_message::Ball>(GetArenaForAllocation());
    ball_ = p;
  }
  return ball_;
}
inline ::fira_message::Ball* Frame::mutable_ball() {
  ::fira_message::Ball* _msg = _internal_mutable_ball();
  // @@protoc_insertion_point(field_mutable:fira_message.Frame.ball)
  return _msg;
}
inline void Frame::set_allocated_ball(::fira_message::Ball* ball) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete ball_;
  }
  if (ball) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::fira_message::Ball>::GetOwningArena(ball);
    if (message_arena != submessage_arena) {
      ball = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ball, submessage_arena);
    }
    
  } else {
    
  }
  ball_ = ball;
  // @@protoc_insertion_point(field_set_allocated:fira_message.Frame.ball)
}

// repeated .fira_message.Robot robots_yellow = 2;
inline int Frame::_internal_robots_yellow_size() const {
  return robots_yellow_.size();
}
inline int Frame::robots_yellow_size() const {
  return _internal_robots_yellow_size();
}
inline void Frame::clear_robots_yellow() {
  robots_yellow_.Clear();
}
inline ::fira_message::Robot* Frame::mutable_robots_yellow(int index) {
  // @@protoc_insertion_point(field_mutable:fira_message.Frame.robots_yellow)
  return robots_yellow_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot >*
Frame::mutable_robots_yellow() {
  // @@protoc_insertion_point(field_mutable_list:fira_message.Frame.robots_yellow)
  return &robots_yellow_;
}
inline const ::fira_message::Robot& Frame::_internal_robots_yellow(int index) const {
  return robots_yellow_.Get(index);
}
inline const ::fira_message::Robot& Frame::robots_yellow(int index) const {
  // @@protoc_insertion_point(field_get:fira_message.Frame.robots_yellow)
  return _internal_robots_yellow(index);
}
inline ::fira_message::Robot* Frame::_internal_add_robots_yellow() {
  return robots_yellow_.Add();
}
inline ::fira_message::Robot* Frame::add_robots_yellow() {
  ::fira_message::Robot* _add = _internal_add_robots_yellow();
  // @@protoc_insertion_point(field_add:fira_message.Frame.robots_yellow)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot >&
Frame::robots_yellow() const {
  // @@protoc_insertion_point(field_list:fira_message.Frame.robots_yellow)
  return robots_yellow_;
}

// repeated .fira_message.Robot robots_blue = 3;
inline int Frame::_internal_robots_blue_size() const {
  return robots_blue_.size();
}
inline int Frame::robots_blue_size() const {
  return _internal_robots_blue_size();
}
inline void Frame::clear_robots_blue() {
  robots_blue_.Clear();
}
inline ::fira_message::Robot* Frame::mutable_robots_blue(int index) {
  // @@protoc_insertion_point(field_mutable:fira_message.Frame.robots_blue)
  return robots_blue_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot >*
Frame::mutable_robots_blue() {
  // @@protoc_insertion_point(field_mutable_list:fira_message.Frame.robots_blue)
  return &robots_blue_;
}
inline const ::fira_message::Robot& Frame::_internal_robots_blue(int index) const {
  return robots_blue_.Get(index);
}
inline const ::fira_message::Robot& Frame::robots_blue(int index) const {
  // @@protoc_insertion_point(field_get:fira_message.Frame.robots_blue)
  return _internal_robots_blue(index);
}
inline ::fira_message::Robot* Frame::_internal_add_robots_blue() {
  return robots_blue_.Add();
}
inline ::fira_message::Robot* Frame::add_robots_blue() {
  ::fira_message::Robot* _add = _internal_add_robots_blue();
  // @@protoc_insertion_point(field_add:fira_message.Frame.robots_blue)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fira_message::Robot >&
Frame::robots_blue() const {
  // @@protoc_insertion_point(field_list:fira_message.Frame.robots_blue)
  return robots_blue_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace fira_message

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_common_2eproto
